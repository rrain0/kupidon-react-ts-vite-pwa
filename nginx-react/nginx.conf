
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       mime.types;
  default_type  application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  client_max_body_size 16M;

  #gzip  on;

  #    error_page  404              /404.html;

  #    # redirect server error pages to the static page /50x.html
  #
  #    error_page   500 502 503 504  /50x.html;
  #    location = /50x.html {
  #      root   html;
  #    }

  #    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
  #
  #    location ~ \.php$ {
  #      proxy_pass   http://127.0.0.1;
  #    }

  #    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  #
  #    location ~ \.php$ {
  #      root           html;
  #      fastcgi_pass   127.0.0.1:9000;
  #      fastcgi_index  index.php;
  #      fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
  #      include        fastcgi_params;
  #    }

  #    # deny access to .htaccess files, if Apache's document root
  #    # concurs with nginx's one
  #
  #    location ~ /\.ht {
  #      deny  all;
  #    }
  #}




  ## SERVER EXAMPLE
  ## Another virtual host using mix of IP-, name-, and port-based configuration
  #server {
  #  # set which port to listen
  #  listen       8000;
  #  listen       443 ssl;
  #  listen       somename:8080;
  #
  #  # set the domain on which nginx will react
  #  server_name  somename  alias  another.alias;
  #  server_name  localhost;
  #  server_name main.com ns.main.com *.main.com;
  #
  #  location / {
  #    root   html;
  #    index  index.html index.htm;
  #  }
  #  location / {
  #    root   "D:/PROG/JavaScript/[projects]/kupidon-react-ts-pwa/build/";
  #    index  index.html index.htm;
  #  }
  #
  #  # configuring proxy: from location "..." to proxy_pass "..."
  #  location /api/ {
  #    proxy_pass http://localhost:4001/;
  #  }
  #}



  # react server
  # http://localhost:${REACT_PORT}
  server {
    listen       ${REACT_PORT};

    root "/app";

    charset utf-8;

    location / {
      #root   "D:/PROG/JavaScript/[projects]/kupidon-react-ts-pwa/build/";
      #index  index.html index.htm;

      # This sequentially tries listed paths.
      # Required for React Router.
      try_files $uri /index.html =404;
    }
  }

    
}
